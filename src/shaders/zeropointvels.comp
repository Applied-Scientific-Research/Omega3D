R"(
#version 430
//
// zeropointvels.comp - just zero out the velocity values
//
// (c)2019 Applied Scientific Research, Inc.
//         Mark J. Stock <markjstock@gmail.com>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
layout(local_size_x=128) in;

layout(location = 0) uniform uint itarg;
layout(location = 1) uniform uint ntarg;
layout(std430, binding=1) restrict buffer _t1 { vec4 t1[]; };
layout(std430, binding=2) restrict buffer _t2 { vec4 t2[]; };
layout(std430, binding=3) restrict buffer _t3 { vec4 t3[]; };

void main() {
   uint tidx = itarg + uint(gl_GlobalInvocationID);
   // set vels and vel grads to the input value
   t1[tidx] = vec4(0.f);
   t2[tidx] = vec4(0.f);
   t3[tidx] = vec4(0.f);
}
)"
